/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.example.android.notepad;

public final class R {
  public static final class attr {
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f010000;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f010001;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f010002;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f010003;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f010004;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f010005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int cardViewStyle=0x7f010006;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f010007;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f010008;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f010009;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f01000a;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f01000b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_addButtonColorNormal=0x7f01000c;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_addButtonColorPressed=0x7f01000d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_addButtonPlusIconColor=0x7f01000e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fab_addButtonSize=0x7f01000f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fab_addButtonStrokeVisible=0x7f010010;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_colorDisabled=0x7f010011;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_colorNormal=0x7f010012;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_colorPressed=0x7f010013;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>down</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>2</td><td></td></tr>
     * <tr><td>right</td><td>3</td><td></td></tr>
     * <tr><td>up</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fab_expandDirection=0x7f010014;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fab_icon=0x7f010015;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fab_labelStyle=0x7f010016;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int fab_labelsPosition=0x7f010017;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fab_plusIconColor=0x7f010018;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fab_size=0x7f010019;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fab_stroke_visible=0x7f01001a;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fab_title=0x7f01001b;
  }
  public static final class color {
    public static final int cardview_dark_background=0x7f020000;
    public static final int cardview_light_background=0x7f020001;
    public static final int cardview_shadow_end_color=0x7f020002;
    public static final int cardview_shadow_start_color=0x7f020003;
  }
  public static final class dimen {
    public static final int cardview_compat_inset_shadow=0x7f030000;
    public static final int cardview_default_elevation=0x7f030001;
    public static final int cardview_default_radius=0x7f030002;
    public static final int fab_actions_spacing=0x7f030003;
    public static final int fab_icon_size=0x7f030004;
    public static final int fab_labels_margin=0x7f030005;
    public static final int fab_plus_icon_size=0x7f030006;
    public static final int fab_plus_icon_stroke=0x7f030007;
    public static final int fab_shadow_offset=0x7f030008;
    public static final int fab_shadow_radius=0x7f030009;
    public static final int fab_size_mini=0x7f03000a;
    public static final int fab_size_normal=0x7f03000b;
    public static final int fab_stroke_width=0x7f03000c;
  }
  public static final class drawable {
    public static final int android_add=0x7f040000;
    public static final int android_close=0x7f040001;
    public static final int android_done=0x7f040002;
    public static final int android_more=0x7f040003;
    public static final int app_notes=0x7f040004;
    public static final int fab_bg_mini=0x7f040005;
    public static final int fab_bg_normal=0x7f040006;
    public static final int ic_menu_compose=0x7f040007;
    public static final int ic_menu_delete=0x7f040008;
    public static final int ic_menu_edit=0x7f040009;
    public static final int ic_menu_revert=0x7f04000a;
    public static final int ic_menu_save=0x7f04000b;
    public static final int live_folder_notes=0x7f04000c;
  }
  public static final class id {
    public static final int add_note=0x7f050000;
    public static final int context_copy=0x7f050001;
    public static final int context_delete=0x7f050002;
    public static final int context_open=0x7f050003;
    public static final int delete_note=0x7f050004;
    public static final int delete_notes=0x7f050005;
    public static final int down=0x7f050006;
    public static final int fab_expand_menu_button=0x7f050007;
    public static final int fab_label=0x7f050008;
    public static final int fab_menu=0x7f050009;
    public static final int left=0x7f05000a;
    public static final int menu_add=0x7f05000b;
    public static final int menu_delete=0x7f05000c;
    public static final int menu_paste=0x7f05000d;
    public static final int menu_revert=0x7f05000e;
    public static final int menu_save=0x7f05000f;
    public static final int mini=0x7f050010;
    public static final int normal=0x7f050011;
    public static final int note=0x7f050012;
    public static final int ok=0x7f050013;
    public static final int right=0x7f050014;
    public static final int save_note=0x7f050015;
    public static final int textDate=0x7f050016;
    public static final int textTitle=0x7f050017;
    public static final int title=0x7f050018;
    public static final int up=0x7f050019;
  }
  public static final class layout {
    public static final int note_editor=0x7f060000;
    public static final int notelist_item2=0x7f060001;
    public static final int notelist_item3=0x7f060002;
    public static final int notelist_item4=0x7f060003;
    public static final int notelist_main=0x7f060004;
    public static final int noteslist_item=0x7f060005;
    public static final int title_editor=0x7f060006;
  }
  public static final class menu {
    public static final int editor_options_menu=0x7f070000;
    public static final int list_context_menu=0x7f070001;
    public static final int list_options_menu=0x7f070002;
  }
  public static final class string {
    public static final int app_name=0x7f080000;
    public static final int button_ok=0x7f080001;
    public static final int error_message=0x7f080002;
    public static final int error_title=0x7f080003;
    public static final int live_folder_name=0x7f080004;
    public static final int menu_add=0x7f080005;
    public static final int menu_copy=0x7f080006;
    public static final int menu_delete=0x7f080007;
    public static final int menu_open=0x7f080008;
    public static final int menu_paste=0x7f080009;
    public static final int menu_revert=0x7f08000a;
    public static final int menu_save=0x7f08000b;
    public static final int nothing_to_save=0x7f08000c;
    public static final int resolve_edit=0x7f08000d;
    public static final int resolve_title=0x7f08000e;
    public static final int text_title=0x7f08000f;
    public static final int title_create=0x7f080010;
    public static final int title_edit=0x7f080011;
    public static final int title_edit_title=0x7f080012;
    public static final int title_notes_list=0x7f080013;
  }
  public static final class style {
    public static final int Base_CardView=0x7f090000;
    public static final int CardView=0x7f090001;
    public static final int CardView_Dark=0x7f090002;
    public static final int CardView_Light=0x7f090003;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a AddFloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AddFloatingActionButton_fab_plusIconColor com.example.android.notepad:fab_plusIconColor}</code></td><td></td></tr>
     * </table>
     * @see #AddFloatingActionButton_fab_plusIconColor
     */
    public static final int[] AddFloatingActionButton={
      0x7f010018
    };
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_plusIconColor}
     * attribute's value can be found in the {@link #AddFloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:fab_plusIconColor
     */
    public static final int AddFloatingActionButton_fab_plusIconColor=0;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.example.android.notepad:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.example.android.notepad:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.example.android.notepad:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.example.android.notepad:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.example.android.notepad:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.example.android.notepad:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.example.android.notepad:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.example.android.notepad:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.example.android.notepad:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.example.android.notepad:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.example.android.notepad:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
      0x0101013f, 0x01010140, 0x7f010000, 0x7f010001, 
      0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005, 
      0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a, 
      0x7f01000b
    };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:cardElevation
     */
    public static final int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.notepad:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.notepad:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:contentPadding
     */
    public static final int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.notepad:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_colorDisabled com.example.android.notepad:fab_colorDisabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_colorNormal com.example.android.notepad:fab_colorNormal}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_colorPressed com.example.android.notepad:fab_colorPressed}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_icon com.example.android.notepad:fab_icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_size com.example.android.notepad:fab_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_stroke_visible com.example.android.notepad:fab_stroke_visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fab_title com.example.android.notepad:fab_title}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionButton_fab_colorDisabled
     * @see #FloatingActionButton_fab_colorNormal
     * @see #FloatingActionButton_fab_colorPressed
     * @see #FloatingActionButton_fab_icon
     * @see #FloatingActionButton_fab_size
     * @see #FloatingActionButton_fab_stroke_visible
     * @see #FloatingActionButton_fab_title
     */
    public static final int[] FloatingActionButton={
      0x7f010011, 0x7f010012, 0x7f010013, 0x7f010015, 
      0x7f010019, 0x7f01001a, 0x7f01001b
    };
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_colorDisabled}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:fab_colorDisabled
     */
    public static final int FloatingActionButton_fab_colorDisabled=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_colorNormal}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:fab_colorNormal
     */
    public static final int FloatingActionButton_fab_colorNormal=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_colorPressed}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:fab_colorPressed
     */
    public static final int FloatingActionButton_fab_colorPressed=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_icon}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.example.android.notepad:fab_icon
     */
    public static final int FloatingActionButton_fab_icon=3;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_size}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.example.android.notepad:fab_size
     */
    public static final int FloatingActionButton_fab_size=4;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_stroke_visible}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.notepad:fab_stroke_visible
     */
    public static final int FloatingActionButton_fab_stroke_visible=5;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_title}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.android.notepad:fab_title
     */
    public static final int FloatingActionButton_fab_title=6;
    /**
     * Attributes that can be used with a FloatingActionsMenu.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonColorNormal com.example.android.notepad:fab_addButtonColorNormal}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonColorPressed com.example.android.notepad:fab_addButtonColorPressed}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonPlusIconColor com.example.android.notepad:fab_addButtonPlusIconColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonSize com.example.android.notepad:fab_addButtonSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_addButtonStrokeVisible com.example.android.notepad:fab_addButtonStrokeVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_expandDirection com.example.android.notepad:fab_expandDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_labelStyle com.example.android.notepad:fab_labelStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionsMenu_fab_labelsPosition com.example.android.notepad:fab_labelsPosition}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionsMenu_fab_addButtonColorNormal
     * @see #FloatingActionsMenu_fab_addButtonColorPressed
     * @see #FloatingActionsMenu_fab_addButtonPlusIconColor
     * @see #FloatingActionsMenu_fab_addButtonSize
     * @see #FloatingActionsMenu_fab_addButtonStrokeVisible
     * @see #FloatingActionsMenu_fab_expandDirection
     * @see #FloatingActionsMenu_fab_labelStyle
     * @see #FloatingActionsMenu_fab_labelsPosition
     */
    public static final int[] FloatingActionsMenu={
      0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 
      0x7f010010, 0x7f010014, 0x7f010016, 0x7f010017
    };
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_addButtonColorNormal}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:fab_addButtonColorNormal
     */
    public static final int FloatingActionsMenu_fab_addButtonColorNormal=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_addButtonColorPressed}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:fab_addButtonColorPressed
     */
    public static final int FloatingActionsMenu_fab_addButtonColorPressed=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_addButtonPlusIconColor}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.notepad:fab_addButtonPlusIconColor
     */
    public static final int FloatingActionsMenu_fab_addButtonPlusIconColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_addButtonSize}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.example.android.notepad:fab_addButtonSize
     */
    public static final int FloatingActionsMenu_fab_addButtonSize=3;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_addButtonStrokeVisible}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.notepad:fab_addButtonStrokeVisible
     */
    public static final int FloatingActionsMenu_fab_addButtonStrokeVisible=4;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_expandDirection}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>down</td><td>1</td><td></td></tr>
     * <tr><td>left</td><td>2</td><td></td></tr>
     * <tr><td>right</td><td>3</td><td></td></tr>
     * <tr><td>up</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.example.android.notepad:fab_expandDirection
     */
    public static final int FloatingActionsMenu_fab_expandDirection=5;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_labelStyle}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.example.android.notepad:fab_labelStyle
     */
    public static final int FloatingActionsMenu_fab_labelStyle=6;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.notepad.R.attr#fab_labelsPosition}
     * attribute's value can be found in the {@link #FloatingActionsMenu} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>left</td><td>0</td><td></td></tr>
     * <tr><td>right</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.example.android.notepad:fab_labelsPosition
     */
    public static final int FloatingActionsMenu_fab_labelsPosition=7;
  }
}